# Generated by Django 5.1.3 on 2024-12-04 18:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('help_for', models.CharField(max_length=50, verbose_name='Кому нужна помощь?')),
                ('gender', models.CharField(max_length=10, verbose_name='Пол клиента')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Вес (кг)')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Рост (см)')),
                ('health_issues', models.TextField(blank=True, null=True, verbose_name='Особенности здоровья')),
                ('mobility', models.CharField(blank=True, max_length=50, verbose_name='Как передвигается?')),
                ('care_location', models.CharField(blank=True, max_length=50, verbose_name='Место ухода')),
                ('frequency', models.CharField(blank=True, max_length=100, verbose_name='Как часто нужна помощь?')),
                ('working_hours', models.CharField(blank=True, max_length=100, verbose_name='Время работы')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Когда нужна услуга')),
                ('address', models.TextField(blank=True, verbose_name='Адрес выполнения работы')),
                ('payment_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Минимальная оплата')),
                ('payment_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Максимальная оплата')),
                ('additional_notes', models.TextField(blank=True, verbose_name='Пожелания к заказу')),
                ('phone', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('full_name', models.CharField(max_length=100, verbose_name='Имя и фамилия клиента')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('birthday', models.DateField()),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
